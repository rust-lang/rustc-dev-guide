// Populate the sidebar
//
// This is a script, and not included directly in the page, to control the total size of the book.
// The TOC contains an entry for each page, so if each page includes a copy of the TOC,
// the total size of the page becomes O(n**2).
class MDBookSidebarScrollbox extends HTMLElement {
    constructor() {
        super();
    }
    connectedCallback() {
        this.innerHTML = '<ol class="chapter"><li class="chapter-item affix "><a href="getting-started.html">Getting Started</a></li><li class="chapter-item affix "><a href="about-this-guide.html">About this guide</a></li><li class="chapter-item affix "><li class="spacer"></li><li class="chapter-item affix "><li class="part-title">Building and debugging rustc</li><li class="chapter-item "><a href="building/how-to-build-and-run.html"><strong aria-hidden="true">1.</strong> How to build and run the compiler</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="building/quickstart.html"><strong aria-hidden="true">1.1.</strong> Quickstart</a></li><li class="chapter-item "><a href="building/prerequisites.html"><strong aria-hidden="true">1.2.</strong> Prerequisites</a></li><li class="chapter-item "><a href="building/suggested.html"><strong aria-hidden="true">1.3.</strong> Suggested workflows</a></li><li class="chapter-item "><a href="building/build-install-distribution-artifacts.html"><strong aria-hidden="true">1.4.</strong> Distribution artifacts</a></li><li class="chapter-item "><a href="building/compiler-documenting.html"><strong aria-hidden="true">1.5.</strong> Building documentation</a></li><li class="chapter-item "><a href="rustdoc.html"><strong aria-hidden="true">1.6.</strong> Rustdoc overview</a></li><li class="chapter-item "><a href="building/new-target.html"><strong aria-hidden="true">1.7.</strong> Adding a new target</a></li><li class="chapter-item "><a href="building/optimized-build.html"><strong aria-hidden="true">1.8.</strong> Optimized build</a></li></ol></li><li class="chapter-item "><a href="tests/intro.html"><strong aria-hidden="true">2.</strong> Testing the compiler</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="tests/running.html"><strong aria-hidden="true">2.1.</strong> Running tests</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="tests/docker.html"><strong aria-hidden="true">2.1.1.</strong> Testing with Docker</a></li><li class="chapter-item "><a href="tests/ci.html"><strong aria-hidden="true">2.1.2.</strong> Testing with CI</a></li></ol></li><li class="chapter-item "><a href="tests/adding.html"><strong aria-hidden="true">2.2.</strong> Adding new tests</a></li><li class="chapter-item "><a href="tests/best-practices.html"><strong aria-hidden="true">2.3.</strong> Best practices</a></li><li class="chapter-item "><a href="tests/compiletest.html"><strong aria-hidden="true">2.4.</strong> Compiletest</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="tests/ui.html"><strong aria-hidden="true">2.4.1.</strong> UI tests</a></li><li class="chapter-item "><a href="tests/directives.html"><strong aria-hidden="true">2.4.2.</strong> Test directives</a></li><li class="chapter-item "><a href="tests/minicore.html"><strong aria-hidden="true">2.4.3.</strong> Minicore</a></li></ol></li><li class="chapter-item "><a href="tests/ecosystem.html"><strong aria-hidden="true">2.5.</strong> Ecosystem testing</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="tests/crater.html"><strong aria-hidden="true">2.5.1.</strong> Crater</a></li><li class="chapter-item "><a href="tests/ecosystem-test-jobs/fuchsia.html"><strong aria-hidden="true">2.5.2.</strong> Fuchsia</a></li><li class="chapter-item "><a href="tests/ecosystem-test-jobs/rust-for-linux.html"><strong aria-hidden="true">2.5.3.</strong> Rust for Linux</a></li></ol></li><li class="chapter-item "><a href="tests/codegen-backend-tests/intro.html"><strong aria-hidden="true">2.6.</strong> Codegen backend testing</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="tests/codegen-backend-tests/cg_clif.html"><strong aria-hidden="true">2.6.1.</strong> Cranelift codegen backend</a></li><li class="chapter-item "><a href="tests/codegen-backend-tests/cg_gcc.html"><strong aria-hidden="true">2.6.2.</strong> GCC codegen backend</a></li></ol></li><li class="chapter-item "><a href="tests/perf.html"><strong aria-hidden="true">2.7.</strong> Performance testing</a></li><li class="chapter-item "><a href="tests/misc.html"><strong aria-hidden="true">2.8.</strong> Misc info</a></li></ol></li><li class="chapter-item "><a href="compiler-debugging.html"><strong aria-hidden="true">3.</strong> Debugging the compiler</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="tracing.html"><strong aria-hidden="true">3.1.</strong> Using the tracing/logging instrumentation</a></li></ol></li><li class="chapter-item "><a href="profiling.html"><strong aria-hidden="true">4.</strong> Profiling the compiler</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="profiling/with_perf.html"><strong aria-hidden="true">4.1.</strong> with the linux perf tool</a></li><li class="chapter-item "><a href="profiling/wpa_profiling.html"><strong aria-hidden="true">4.2.</strong> with Windows Performance Analyzer</a></li><li class="chapter-item "><a href="profiling/with_rustc_perf.html"><strong aria-hidden="true">4.3.</strong> with the Rust benchmark suite</a></li></ol></li><li class="chapter-item "><a href="crates-io.html"><strong aria-hidden="true">5.</strong> crates.io dependencies</a></li><li class="chapter-item affix "><li class="part-title">Contributing to Rust</li><li class="chapter-item "><a href="contributing.html"><strong aria-hidden="true">6.</strong> Contribution procedures</a></li><li class="chapter-item "><a href="compiler-team.html"><strong aria-hidden="true">7.</strong> About the compiler team</a></li><li class="chapter-item "><a href="git.html"><strong aria-hidden="true">8.</strong> Using Git</a></li><li class="chapter-item "><a href="rustbot.html"><strong aria-hidden="true">9.</strong> Mastering @rustbot</a></li><li class="chapter-item "><a href="walkthrough.html"><strong aria-hidden="true">10.</strong> Walkthrough: a typical contribution</a></li><li class="chapter-item "><a href="implementing_new_features.html"><strong aria-hidden="true">11.</strong> Implementing new language features</a></li><li class="chapter-item "><a href="stability.html"><strong aria-hidden="true">12.</strong> Stability attributes</a></li><li class="chapter-item "><a href="stabilization_guide.html"><strong aria-hidden="true">13.</strong> Stabilizing language features</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="stabilization_report_template.html"><strong aria-hidden="true">13.1.</strong> Stabilization report template</a></li></ol></li><li class="chapter-item "><a href="feature-gates.html"><strong aria-hidden="true">14.</strong> Feature Gates</a></li><li class="chapter-item "><a href="conventions.html"><strong aria-hidden="true">15.</strong> Coding conventions</a></li><li class="chapter-item "><a href="bug-fix-procedure.html"><strong aria-hidden="true">16.</strong> Procedures for breaking changes</a></li><li class="chapter-item "><a href="external-repos.html"><strong aria-hidden="true">17.</strong> Using external repositories</a></li><li class="chapter-item "><a href="fuzzing.html"><strong aria-hidden="true">18.</strong> Fuzzing</a></li><li class="chapter-item "><a href="notification-groups/about.html"><strong aria-hidden="true">19.</strong> Notification groups</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="notification-groups/apple.html"><strong aria-hidden="true">19.1.</strong> Apple</a></li><li class="chapter-item "><a href="notification-groups/arm.html"><strong aria-hidden="true">19.2.</strong> ARM</a></li><li class="chapter-item "><a href="notification-groups/emscripten.html"><strong aria-hidden="true">19.3.</strong> Emscripten</a></li><li class="chapter-item "><a href="notification-groups/fuchsia.html"><strong aria-hidden="true">19.4.</strong> Fuchsia</a></li><li class="chapter-item "><a href="notification-groups/risc-v.html"><strong aria-hidden="true">19.5.</strong> RISC-V</a></li><li class="chapter-item "><a href="notification-groups/rust-for-linux.html"><strong aria-hidden="true">19.6.</strong> Rust for Linux</a></li><li class="chapter-item "><a href="notification-groups/wasi.html"><strong aria-hidden="true">19.7.</strong> WASI</a></li><li class="chapter-item "><a href="notification-groups/wasm.html"><strong aria-hidden="true">19.8.</strong> WebAssembly</a></li><li class="chapter-item "><a href="notification-groups/windows.html"><strong aria-hidden="true">19.9.</strong> Windows</a></li></ol></li><li class="chapter-item "><a href="licenses.html"><strong aria-hidden="true">20.</strong> Licenses</a></li><li class="chapter-item "><a href="guides/editions.html"><strong aria-hidden="true">21.</strong> Editions</a></li><li class="chapter-item affix "><li class="part-title">Bootstrapping</li><li class="chapter-item "><a href="building/bootstrapping/intro.html"><strong aria-hidden="true">22.</strong> Prologue</a></li><li class="chapter-item "><a href="building/bootstrapping/what-bootstrapping-does.html"><strong aria-hidden="true">23.</strong> What Bootstrapping does</a></li><li class="chapter-item "><a href="building/bootstrapping/how-bootstrap-does-it.html"><strong aria-hidden="true">24.</strong> How Bootstrap does it</a></li><li class="chapter-item "><a href="building/bootstrapping/writing-tools-in-bootstrap.html"><strong aria-hidden="true">25.</strong> Writing tools in Bootstrap</a></li><li class="chapter-item "><a href="building/bootstrapping/debugging-bootstrap.html"><strong aria-hidden="true">26.</strong> Debugging bootstrap</a></li><li class="chapter-item "><a href="building/bootstrapping/bootstrap-in-dependencies.html"><strong aria-hidden="true">27.</strong> cfg(bootstrap) in dependencies</a></li><li class="chapter-item affix "><li class="part-title">High-level Compiler Architecture</li><li class="chapter-item "><a href="part-2-intro.html"><strong aria-hidden="true">28.</strong> Prologue</a></li><li class="chapter-item "><a href="overview.html"><strong aria-hidden="true">29.</strong> Overview of the compiler</a></li><li class="chapter-item "><a href="compiler-src.html"><strong aria-hidden="true">30.</strong> The compiler source code</a></li><li class="chapter-item "><a href="query.html"><strong aria-hidden="true">31.</strong> Queries: demand-driven compilation</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="queries/query-evaluation-model-in-detail.html"><strong aria-hidden="true">31.1.</strong> The Query Evaluation Model in detail</a></li><li class="chapter-item "><a href="queries/incremental-compilation.html"><strong aria-hidden="true">31.2.</strong> Incremental compilation</a></li><li class="chapter-item "><a href="queries/incremental-compilation-in-detail.html"><strong aria-hidden="true">31.3.</strong> Incremental compilation in detail</a></li><li class="chapter-item "><a href="incrcomp-debugging.html"><strong aria-hidden="true">31.4.</strong> Debugging and testing</a></li><li class="chapter-item "><a href="queries/salsa.html"><strong aria-hidden="true">31.5.</strong> Salsa</a></li></ol></li><li class="chapter-item "><a href="memory.html"><strong aria-hidden="true">32.</strong> Memory management in rustc</a></li><li class="chapter-item "><a href="serialization.html"><strong aria-hidden="true">33.</strong> Serialization in rustc</a></li><li class="chapter-item "><a href="parallel-rustc.html"><strong aria-hidden="true">34.</strong> Parallel compilation</a></li><li class="chapter-item "><a href="rustdoc-internals.html"><strong aria-hidden="true">35.</strong> Rustdoc internals</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="rustdoc-internals/search.html"><strong aria-hidden="true">35.1.</strong> Search</a></li><li class="chapter-item "><a href="rustdoc-internals/rustdoc-test-suite.html"><strong aria-hidden="true">35.2.</strong> The rustdoc test suite</a></li><li class="chapter-item "><a href="rustdoc-internals/rustdoc-gui-test-suite.html"><strong aria-hidden="true">35.3.</strong> The rustdoc-gui test suite</a></li><li class="chapter-item "><a href="rustdoc-internals/rustdoc-json-test-suite.html"><strong aria-hidden="true">35.4.</strong> The rustdoc-json test suite</a></li></ol></li><li class="chapter-item "><a href="offload/internals.html"><strong aria-hidden="true">36.</strong> GPU offload internals</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="offload/installation.html"><strong aria-hidden="true">36.1.</strong> Installation</a></li><li class="chapter-item "><a href="offload/usage.html"><strong aria-hidden="true">36.2.</strong> Usage</a></li></ol></li><li class="chapter-item "><a href="autodiff/internals.html"><strong aria-hidden="true">37.</strong> Autodiff internals</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="autodiff/installation.html"><strong aria-hidden="true">37.1.</strong> Installation</a></li><li class="chapter-item "><a href="autodiff/debugging.html"><strong aria-hidden="true">37.2.</strong> How to debug</a></li><li class="chapter-item "><a href="autodiff/flags.html"><strong aria-hidden="true">37.3.</strong> Autodiff flags</a></li><li class="chapter-item "><a href="autodiff/type-trees.html"><strong aria-hidden="true">37.4.</strong> Type Trees</a></li></ol></li><li class="chapter-item "><li class="part-title">Source Code Representation</li><li class="chapter-item "><a href="part-3-intro.html"><strong aria-hidden="true">38.</strong> Prologue</a></li><li class="chapter-item "><a href="syntax-intro.html"><strong aria-hidden="true">39.</strong> Syntax and the AST</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="the-parser.html"><strong aria-hidden="true">39.1.</strong> Lexing and parsing</a></li><li class="chapter-item "><a href="macro-expansion.html"><strong aria-hidden="true">39.2.</strong> Macro expansion</a></li><li class="chapter-item "><a href="name-resolution.html"><strong aria-hidden="true">39.3.</strong> Name resolution</a></li><li class="chapter-item "><a href="attributes.html"><strong aria-hidden="true">39.4.</strong> Attributes</a></li><li class="chapter-item "><a href="test-implementation.html"><strong aria-hidden="true">39.5.</strong> #[test] implementation</a></li><li class="chapter-item "><a href="panic-implementation.html"><strong aria-hidden="true">39.6.</strong> Panic implementation</a></li><li class="chapter-item "><a href="ast-validation.html"><strong aria-hidden="true">39.7.</strong> AST validation</a></li><li class="chapter-item "><a href="feature-gate-ck.html"><strong aria-hidden="true">39.8.</strong> Feature gate checking</a></li><li class="chapter-item "><a href="lang-items.html"><strong aria-hidden="true">39.9.</strong> Lang Items</a></li></ol></li><li class="chapter-item "><a href="hir.html"><strong aria-hidden="true">40.</strong> The HIR (High-level IR)</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="hir/lowering.html"><strong aria-hidden="true">40.1.</strong> Lowering AST to HIR</a></li><li class="chapter-item "><a href="hir/ambig-unambig-ty-and-consts.html"><strong aria-hidden="true">40.2.</strong> Ambig/Unambig Types and Consts</a></li><li class="chapter-item "><a href="hir/debugging.html"><strong aria-hidden="true">40.3.</strong> Debugging</a></li></ol></li><li class="chapter-item "><a href="thir.html"><strong aria-hidden="true">41.</strong> The THIR (Typed High-level IR)</a></li><li class="chapter-item "><a href="mir/index.html"><strong aria-hidden="true">42.</strong> The MIR (Mid-level IR)</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="mir/construction.html"><strong aria-hidden="true">42.1.</strong> MIR construction</a></li><li class="chapter-item "><a href="mir/visitor.html"><strong aria-hidden="true">42.2.</strong> MIR visitor and traversal</a></li><li class="chapter-item "><a href="mir/passes.html"><strong aria-hidden="true">42.3.</strong> MIR queries and passes: getting the MIR</a></li></ol></li><li class="chapter-item "><a href="asm.html"><strong aria-hidden="true">43.</strong> Inline assembly</a></li><li class="chapter-item affix "><li class="part-title">Supporting Infrastructure</li><li class="chapter-item "><a href="cli.html"><strong aria-hidden="true">44.</strong> Command-line arguments</a></li><li class="chapter-item "><a href="rustc-driver/intro.html"><strong aria-hidden="true">45.</strong> rustc_driver and rustc_interface</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="rustc-driver/remarks-on-perma-unstable-features.html"><strong aria-hidden="true">45.1.</strong> Remarks on perma-unstable features</a></li><li class="chapter-item "><a href="rustc-driver/interacting-with-the-ast.html"><strong aria-hidden="true">45.2.</strong> Example: Type checking</a></li><li class="chapter-item "><a href="rustc-driver/getting-diagnostics.html"><strong aria-hidden="true">45.3.</strong> Example: Getting diagnostics</a></li></ol></li><li class="chapter-item "><a href="diagnostics.html"><strong aria-hidden="true">46.</strong> Errors and lints</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="diagnostics/diagnostic-structs.html"><strong aria-hidden="true">46.1.</strong> Diagnostic and subdiagnostic structs</a></li><li class="chapter-item "><a href="diagnostics/translation.html"><strong aria-hidden="true">46.2.</strong> Translation</a></li><li class="chapter-item "><a href="diagnostics/lintstore.html"><strong aria-hidden="true">46.3.</strong> LintStore</a></li><li class="chapter-item "><a href="diagnostics/error-codes.html"><strong aria-hidden="true">46.4.</strong> Error codes</a></li><li class="chapter-item "><a href="diagnostics/diagnostic-items.html"><strong aria-hidden="true">46.5.</strong> Diagnostic items</a></li><li class="chapter-item "><a href="diagnostics/error-guaranteed.html"><strong aria-hidden="true">46.6.</strong> ErrorGuaranteed</a></li></ol></li><li class="chapter-item "><li class="part-title">Analysis</li><li class="chapter-item "><a href="part-4-intro.html"><strong aria-hidden="true">47.</strong> Prologue</a></li><li class="chapter-item "><a href="generic_parameters_summary.html"><strong aria-hidden="true">48.</strong> Generic parameter definitions</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="ty_module/early_binder.html"><strong aria-hidden="true">48.1.</strong> EarlyBinder and instantiating parameters</a></li></ol></li><li class="chapter-item "><a href="ty_module/binders.html"><strong aria-hidden="true">49.</strong> Binders and Higher ranked regions</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="ty_module/instantiating_binders.html"><strong aria-hidden="true">49.1.</strong> Instantiating binders</a></li></ol></li><li class="chapter-item "><a href="early_late_parameters.html"><strong aria-hidden="true">50.</strong> Early vs Late bound parameters</a></li><li class="chapter-item "><a href="ty.html"><strong aria-hidden="true">51.</strong> The ty module: representing types</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="ty_module/generic_arguments.html"><strong aria-hidden="true">51.1.</strong> ADTs and Generic Arguments</a></li><li class="chapter-item "><a href="ty_module/param_ty_const_regions.html"><strong aria-hidden="true">51.2.</strong> Parameter types/consts/regions</a></li></ol></li><li class="chapter-item "><a href="ty-fold.html"><strong aria-hidden="true">52.</strong> TypeFolder and TypeFoldable</a></li><li class="chapter-item "><a href="normalization.html"><strong aria-hidden="true">53.</strong> Aliases and Normalization</a></li><li class="chapter-item "><a href="typing_parameter_envs.html"><strong aria-hidden="true">54.</strong> Typing/Param Envs</a></li><li class="chapter-item "><a href="type-inference.html"><strong aria-hidden="true">55.</strong> Type inference</a></li><li class="chapter-item "><a href="traits/resolution.html"><strong aria-hidden="true">56.</strong> Trait solving</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="traits/hrtb.html"><strong aria-hidden="true">56.1.</strong> Higher-ranked trait bounds</a></li><li class="chapter-item "><a href="traits/caching.html"><strong aria-hidden="true">56.2.</strong> Caching subtleties</a></li><li class="chapter-item "><a href="traits/implied-bounds.html"><strong aria-hidden="true">56.3.</strong> Implied bounds</a></li><li class="chapter-item "><a href="traits/specialization.html"><strong aria-hidden="true">56.4.</strong> Specialization</a></li><li class="chapter-item "><a href="traits/chalk.html"><strong aria-hidden="true">56.5.</strong> Chalk-based trait solving</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="traits/lowering-to-logic.html"><strong aria-hidden="true">56.5.1.</strong> Lowering to logic</a></li><li class="chapter-item "><a href="traits/goals-and-clauses.html"><strong aria-hidden="true">56.5.2.</strong> Goals and clauses</a></li><li class="chapter-item "><a href="traits/canonical-queries.html"><strong aria-hidden="true">56.5.3.</strong> Canonical queries</a></li><li class="chapter-item "><a href="traits/canonicalization.html"><strong aria-hidden="true">56.5.4.</strong> Canonicalization</a></li></ol></li><li class="chapter-item "><a href="solve/trait-solving.html"><strong aria-hidden="true">56.6.</strong> Next-gen trait solving</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="solve/invariants.html"><strong aria-hidden="true">56.6.1.</strong> Invariants of the type system</a></li><li class="chapter-item "><a href="solve/the-solver.html"><strong aria-hidden="true">56.6.2.</strong> The solver</a></li><li class="chapter-item "><a href="solve/candidate-preference.html"><strong aria-hidden="true">56.6.3.</strong> Candidate preference</a></li><li class="chapter-item "><a href="solve/canonicalization.html"><strong aria-hidden="true">56.6.4.</strong> Canonicalization</a></li><li class="chapter-item "><a href="solve/coinduction.html"><strong aria-hidden="true">56.6.5.</strong> Coinduction</a></li><li class="chapter-item "><a href="solve/caching.html"><strong aria-hidden="true">56.6.6.</strong> Caching</a></li><li class="chapter-item "><a href="solve/proof-trees.html"><strong aria-hidden="true">56.6.7.</strong> Proof trees</a></li><li class="chapter-item "><a href="solve/opaque-types.html"><strong aria-hidden="true">56.6.8.</strong> Opaque types</a></li><li class="chapter-item "><a href="solve/significant-changes.html"><strong aria-hidden="true">56.6.9.</strong> Significant changes and quirks</a></li></ol></li><li class="chapter-item "><a href="traits/unsize.html"><strong aria-hidden="true">56.7.</strong> Unsize and CoerceUnsized traits</a></li></ol></li><li class="chapter-item "><a href="type-checking.html"><strong aria-hidden="true">57.</strong> Type checking</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="method-lookup.html"><strong aria-hidden="true">57.1.</strong> Method lookup</a></li><li class="chapter-item "><a href="variance.html"><strong aria-hidden="true">57.2.</strong> Variance</a></li><li class="chapter-item "><a href="coherence.html"><strong aria-hidden="true">57.3.</strong> Coherence checking</a></li><li class="chapter-item "><a href="opaque-types-type-alias-impl-trait.html"><strong aria-hidden="true">57.4.</strong> Opaque types</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="opaque-types-impl-trait-inference.html"><strong aria-hidden="true">57.4.1.</strong> Inference details</a></li><li class="chapter-item "><a href="return-position-impl-trait-in-trait.html"><strong aria-hidden="true">57.4.2.</strong> Return Position Impl Trait In Trait</a></li><li class="chapter-item "><a href="borrow_check/opaque-types-region-inference-restrictions.html"><strong aria-hidden="true">57.4.3.</strong> Region inference restrictions</a></li></ol></li></ol></li><li class="chapter-item "><a href="effects.html"><strong aria-hidden="true">58.</strong> Const condition checking</a></li><li class="chapter-item "><a href="pat-exhaustive-checking.html"><strong aria-hidden="true">59.</strong> Pattern and exhaustiveness checking</a></li><li class="chapter-item "><a href="unsafety-checking.html"><strong aria-hidden="true">60.</strong> Unsafety checking</a></li><li class="chapter-item "><a href="mir/dataflow.html"><strong aria-hidden="true">61.</strong> MIR dataflow</a></li><li class="chapter-item "><a href="mir/drop-elaboration.html"><strong aria-hidden="true">62.</strong> Drop elaboration</a></li><li class="chapter-item "><a href="borrow_check.html"><strong aria-hidden="true">63.</strong> The borrow checker</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="borrow_check/moves_and_initialization.html"><strong aria-hidden="true">63.1.</strong> Tracking moves and initialization</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="borrow_check/moves_and_initialization/move_paths.html"><strong aria-hidden="true">63.1.1.</strong> Move paths</a></li></ol></li><li class="chapter-item "><a href="borrow_check/type_check.html"><strong aria-hidden="true">63.2.</strong> MIR type checker</a></li><li class="chapter-item "><a href="borrow_check/drop_check.html"><strong aria-hidden="true">63.3.</strong> Drop check</a></li><li class="chapter-item "><a href="borrow_check/region_inference.html"><strong aria-hidden="true">63.4.</strong> Region inference</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="borrow_check/region_inference/constraint_propagation.html"><strong aria-hidden="true">63.4.1.</strong> Constraint propagation</a></li><li class="chapter-item "><a href="borrow_check/region_inference/lifetime_parameters.html"><strong aria-hidden="true">63.4.2.</strong> Lifetime parameters</a></li><li class="chapter-item "><a href="borrow_check/region_inference/member_constraints.html"><strong aria-hidden="true">63.4.3.</strong> Member constraints</a></li><li class="chapter-item "><a href="borrow_check/region_inference/placeholders_and_universes.html"><strong aria-hidden="true">63.4.4.</strong> Placeholders and universes</a></li><li class="chapter-item "><a href="borrow_check/region_inference/closure_constraints.html"><strong aria-hidden="true">63.4.5.</strong> Closure constraints</a></li><li class="chapter-item "><a href="borrow_check/region_inference/error_reporting.html"><strong aria-hidden="true">63.4.6.</strong> Error reporting</a></li></ol></li><li class="chapter-item "><a href="borrow_check/two_phase_borrows.html"><strong aria-hidden="true">63.5.</strong> Two-phase-borrows</a></li></ol></li><li class="chapter-item "><a href="closure.html"><strong aria-hidden="true">64.</strong> Closure capture inference</a></li><li class="chapter-item "><a href="coroutine-closures.html"><strong aria-hidden="true">65.</strong> Async closures/&quot;coroutine-closures&quot;</a></li><li class="chapter-item affix "><li class="part-title">MIR to binaries</li><li class="chapter-item "><a href="part-5-intro.html"><strong aria-hidden="true">66.</strong> Prologue</a></li><li class="chapter-item "><a href="mir/optimizations.html"><strong aria-hidden="true">67.</strong> MIR optimizations</a></li><li class="chapter-item "><a href="mir/debugging.html"><strong aria-hidden="true">68.</strong> Debugging MIR</a></li><li class="chapter-item "><a href="const-eval.html"><strong aria-hidden="true">69.</strong> Constant evaluation</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="const-eval/interpret.html"><strong aria-hidden="true">69.1.</strong> Interpreter</a></li></ol></li><li class="chapter-item "><a href="backend/monomorph.html"><strong aria-hidden="true">70.</strong> Monomorphization</a></li><li class="chapter-item "><a href="backend/lowering-mir.html"><strong aria-hidden="true">71.</strong> Lowering MIR</a></li><li class="chapter-item "><a href="backend/codegen.html"><strong aria-hidden="true">72.</strong> Code generation</a><a class="toggle"><div>❱</div></a></li><li><ol class="section"><li class="chapter-item "><a href="backend/updating-llvm.html"><strong aria-hidden="true">72.1.</strong> Updating LLVM</a></li><li class="chapter-item "><a href="backend/debugging.html"><strong aria-hidden="true">72.2.</strong> Debugging LLVM</a></li><li class="chapter-item "><a href="backend/backend-agnostic.html"><strong aria-hidden="true">72.3.</strong> Backend Agnostic Codegen</a></li><li class="chapter-item "><a href="backend/implicit-caller-location.html"><strong aria-hidden="true">72.4.</strong> Implicit caller location</a></li></ol></li><li class="chapter-item "><a href="backend/libs-and-metadata.html"><strong aria-hidden="true">73.</strong> Libraries and metadata</a></li><li class="chapter-item "><a href="profile-guided-optimization.html"><strong aria-hidden="true">74.</strong> Profile-guided optimization</a></li><li class="chapter-item "><a href="llvm-coverage-instrumentation.html"><strong aria-hidden="true">75.</strong> LLVM source-based code coverage</a></li><li class="chapter-item "><a href="sanitizers.html"><strong aria-hidden="true">76.</strong> Sanitizers support</a></li><li class="chapter-item "><a href="debugging-support-in-rustc.html"><strong aria-hidden="true">77.</strong> Debugging support in the Rust compiler</a></li><li class="chapter-item affix "><li class="spacer"></li><li class="chapter-item affix "><a href="appendix/background.html">Appendix A: Background topics</a></li><li class="chapter-item affix "><a href="appendix/glossary.html">Appendix B: Glossary</a></li><li class="chapter-item affix "><a href="appendix/code-index.html">Appendix C: Code Index</a></li><li class="chapter-item affix "><a href="appendix/compiler-lecture.html">Appendix D: Compiler Lecture Series</a></li><li class="chapter-item affix "><a href="appendix/bibliography.html">Appendix E: Bibliography</a></li><li class="chapter-item affix "><a href="appendix/humorust.html">Appendix Z: HumorRust</a></li><li class="chapter-item affix "><li class="spacer"></li></ol>';
        // Set the current, active page, and reveal it if it's hidden
        let current_page = document.location.href.toString().split("#")[0].split("?")[0];
        if (current_page.endsWith("/")) {
            current_page += "index.html";
        }
        var links = Array.prototype.slice.call(this.querySelectorAll("a"));
        var l = links.length;
        for (var i = 0; i < l; ++i) {
            var link = links[i];
            var href = link.getAttribute("href");
            if (href && !href.startsWith("#") && !/^(?:[a-z+]+:)?\/\//.test(href)) {
                link.href = path_to_root + href;
            }
            // The "index" page is supposed to alias the first chapter in the book.
            if (link.href === current_page || (i === 0 && path_to_root === "" && current_page.endsWith("/index.html"))) {
                link.classList.add("active");
                var parent = link.parentElement;
                if (parent && parent.classList.contains("chapter-item")) {
                    parent.classList.add("expanded");
                }
                while (parent) {
                    if (parent.tagName === "LI" && parent.previousElementSibling) {
                        if (parent.previousElementSibling.classList.contains("chapter-item")) {
                            parent.previousElementSibling.classList.add("expanded");
                        }
                    }
                    parent = parent.parentElement;
                }
            }
        }
        // Track and set sidebar scroll position
        this.addEventListener('click', function(e) {
            if (e.target.tagName === 'A') {
                sessionStorage.setItem('sidebar-scroll', this.scrollTop);
            }
        }, { passive: true });
        var sidebarScrollTop = sessionStorage.getItem('sidebar-scroll');
        sessionStorage.removeItem('sidebar-scroll');
        if (sidebarScrollTop) {
            // preserve sidebar scroll position when navigating via links within sidebar
            this.scrollTop = sidebarScrollTop;
        } else {
            // scroll sidebar to current active section when navigating via "next/previous chapter" buttons
            var activeSection = document.querySelector('#sidebar .active');
            if (activeSection) {
                activeSection.scrollIntoView({ block: 'center' });
            }
        }
        // Toggle buttons
        var sidebarAnchorToggles = document.querySelectorAll('#sidebar a.toggle');
        function toggleSection(ev) {
            ev.currentTarget.parentElement.classList.toggle('expanded');
        }
        Array.from(sidebarAnchorToggles).forEach(function (el) {
            el.addEventListener('click', toggleSection);
        });
    }
}
window.customElements.define("mdbook-sidebar-scrollbox", MDBookSidebarScrollbox);
